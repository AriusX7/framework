(function() {var implementors = {};
implementors["serenity_framework"] = [{"text":"impl RefUnwindSafe for Category","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Reason","synthetic":true,"types":[]},{"text":"impl&lt;D, E&gt; RefUnwindSafe for Check&lt;D, E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;D, E&gt; RefUnwindSafe for CheckBuilder&lt;D, E&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CommandId","synthetic":true,"types":[]},{"text":"impl&lt;D, E&gt; RefUnwindSafe for Command&lt;D, E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;D, E&gt; RefUnwindSafe for CommandBuilder&lt;D, E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;D, E&gt; RefUnwindSafe for Configuration&lt;D, E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;D&nbsp;=&nbsp;(), E&nbsp;=&nbsp;Box&lt;dyn Error + 'static + Send + Sync, Global&gt;&gt; !RefUnwindSafe for Context&lt;D, E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, D&nbsp;=&nbsp;(), E&nbsp;=&nbsp;Box&lt;dyn Error + 'static + Send + Sync, Global&gt;&gt; !RefUnwindSafe for PrefixContext&lt;'a, D, E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, D&nbsp;=&nbsp;(), E&nbsp;=&nbsp;Box&lt;dyn Error + 'static + Send + Sync, Global&gt;&gt; !RefUnwindSafe for CheckContext&lt;'a, D, E&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DispatchError","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; RefUnwindSafe for Error&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b, 'c, D, E&gt; RefUnwindSafe for CommandIterator&lt;'a, 'b, 'c, D, E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;Name, Id, Struct&gt; RefUnwindSafe for IdMap&lt;Name, Id, Struct&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Id: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Name: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Struct: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Segments&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;D&nbsp;=&nbsp;(), E&nbsp;=&nbsp;Box&lt;dyn Error + 'static + Send + Sync, Global&gt;&gt; !RefUnwindSafe for Framework&lt;D, E&gt;","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()