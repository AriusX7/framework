(function() {var implementors = {};
implementors["serenity_framework"] = [{"text":"impl Unpin for Reason","synthetic":true,"types":[]},{"text":"impl&lt;D, E&gt; Unpin for Check&lt;D, E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;D, E&gt; Unpin for CheckBuilder&lt;D, E&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for CommandId","synthetic":true,"types":[]},{"text":"impl&lt;D, E&gt; Unpin for Command&lt;D, E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;D, E&gt; Unpin for CommandBuilder&lt;D, E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;D, E&gt; Unpin for Configuration&lt;D, E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;D, E&gt; Unpin for Context&lt;D, E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, D, E&gt; Unpin for PrefixContext&lt;'a, D, E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, D, E&gt; Unpin for CheckContext&lt;'a, D, E&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for DispatchError","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for Error&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for GroupId","synthetic":true,"types":[]},{"text":"impl&lt;D, E&gt; Unpin for Group&lt;D, E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;D, E&gt; Unpin for GroupBuilder&lt;D, E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;Name, Id, Struct&gt; Unpin for IdMap&lt;Name, Id, Struct&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Id: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;Name: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;Struct: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Segments&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;D, E&gt; Unpin for Framework&lt;D, E&gt;","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()