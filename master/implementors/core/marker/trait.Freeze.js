(function() {var implementors = {};
implementors["serenity_framework"] = [{"text":"impl Freeze for Category","synthetic":true,"types":[]},{"text":"impl Freeze for Reason","synthetic":true,"types":[]},{"text":"impl&lt;D, E&gt; Freeze for Check&lt;D, E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;D, E&gt; Freeze for CheckBuilder&lt;D, E&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for CommandId","synthetic":true,"types":[]},{"text":"impl&lt;D, E&gt; Freeze for Command&lt;D, E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;D, E&gt; Freeze for CommandBuilder&lt;D, E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;D, E&gt; Freeze for Configuration&lt;D, E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;D, E&gt; Freeze for Context&lt;D, E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, D, E&gt; Freeze for PrefixContext&lt;'a, D, E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, D, E&gt; Freeze for CheckContext&lt;'a, D, E&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for DispatchError","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for Error&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b, 'c, D, E&gt; Freeze for CommandIterator&lt;'a, 'b, 'c, D, E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;Name, Id, Struct&gt; Freeze for IdMap&lt;Name, Id, Struct&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Segments&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;D, E&gt; Freeze for Framework&lt;D, E&gt;","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()