var searchIndex = JSON.parse('{\
"command_attr":{"doc":"","i":[[23,"command","command_attr","",null,null],[23,"hook","","",null,null]],"p":[]},\
"serenity_framework":{"doc":"The official command framework for Serenity bots.","i":[[0,"check","serenity_framework","Functions and types relating to checks.",null,null],[4,"Reason","serenity_framework::check","The reason describing why a check failed.",null,null],[13,"Unknown","","There is no information.",0,null],[13,"User","","Information for the user.",0,null],[13,"Log","","Information for logging purposes.",0,null],[13,"UserAndLog","","Information both for the user and logging purposes.",0,null],[12,"user","serenity_framework::check::Reason","Information for the user.",1,null],[12,"log","","Information for logging purposes.",1,null],[6,"CheckResult","serenity_framework::check","The result type of a check function",null,null],[6,"CheckFn","","The definition of a check function.",null,null],[6,"CheckConstructor","","A constructor of the [`Check`] type provided by the…",null,null],[3,"Check","","Data relating to a check.",null,null],[12,"name","","Name of the check.",2,null],[12,"function","","The function of this check.",2,null],[12,"check_in_help","","A boolean indicating whether the check can apply in help…",2,null],[12,"display_in_help","","A boolean indicating whether the check can be displayed in…",2,null],[11,"builder","","Constructs a builder that will be used to create a check…",2,[[],["checkbuilder",3]]],[3,"CheckBuilder","","A builder type for creating a [`Check`] from scratch.",null,null],[11,"name","","Assigns the name to this check.",3,[[]]],[11,"function","","Assigns the function to this function.",3,[[["checkfn",6]]]],[11,"check_in_help","","Assigns the indicator to this function.",3,[[]]],[11,"display_in_help","","Assigns the indicator to this function.",3,[[]]],[11,"build","","Complete building a check.",3,[[],["check",3]]],[0,"command","serenity_framework","Functions and types relating to commands.",null,null],[6,"StringHook","serenity_framework::command","A function to dynamically create a string.",null,null],[6,"StringsHook","","A function to dynamically create a list of strings.",null,null],[6,"CommandMap","","`IdMap` for storing commands.",null,null],[6,"CommandResult","","The result type of a command function.",null,null],[6,"CommandFn","","The definition of a command function.",null,null],[6,"CommandConstructor","","A constructor of the [`Command`] type provided by the…",null,null],[3,"CommandId","","A unique identifier of a [`Command`] stored in the…",null,null],[11,"into_usize","","Converts the identifier to its internal representation.",4,[[]]],[3,"Command","","Data surrounding a command.",null,null],[12,"id","","The identifier of this command.",5,null],[12,"function","","The function of this command.",5,null],[12,"names","","The names of this command by which it can be invoked.",5,null],[12,"subcommands","","The subcommands belonging to this command.",5,null],[12,"description","","A string describing this command.",5,null],[12,"dynamic_description","","A function to dynamically describe this command.",5,null],[12,"usage","","A string to express usage of this command.",5,null],[12,"dynamic_usage","","A function to dynamically express usage of this command.",5,null],[12,"examples","","A list of strings demonstrating usage of this command.",5,null],[12,"dynamic_examples","","A function to dynamically demonstrate usage of this command.",5,null],[12,"help_available","","A boolean to indicate whether the command can be shown in…",5,null],[12,"check","","A function that allows/denies access to this command.",5,null],[11,"builder","","Constructs a builder that will be used to create a command…",5,[[],["commandbuilder",3]]],[3,"CommandBuilder","","A builder type for creating a [`Command`] from scratch.",null,null],[11,"new","","Constructs a new instance of the builder.",6,[[]]],[11,"name","","Assigns a name to this command.",6,[[]]],[11,"function","","Assigns the function to this command.",6,[[["commandfn",6]]]],[11,"subcommand","","Assigns a subcommand to this command.",6,[[["commandconstructor",6]]]],[11,"description","","Assigns a static description to this command.",6,[[]]],[11,"dynamic_description","","Assigns a function to dynamically create a description to…",6,[[["stringhook",6]]]],[11,"usage","","Assigns a static usage to this command.",6,[[]]],[11,"dynamic_usage","","Assigns a function to dynamically create a usage to this…",6,[[["stringhook",6]]]],[11,"example","","Assigns a static example of usage to this command.",6,[[]]],[11,"dynamic_examples","","Assigns a function to dynamically create a list of…",6,[[["stringshook",6]]]],[11,"check","","Assigns a `check` function to this command.",6,[[["checkconstructor",6]]]],[11,"build","","Complete building a command.",6,[[],["command",3]]],[0,"configuration","serenity_framework","Configuration of the framework.",null,null],[6,"DynamicPrefix","serenity_framework::configuration","The definition of the dynamic prefix hook.",null,null],[3,"Configuration","","The configuration of the framework.",null,null],[12,"prefixes","","A list of static prefixes.",7,null],[12,"dynamic_prefix","","A function to dynamically parse the prefix.",7,null],[12,"case_insensitive","","A boolean indicating whether casing of the letters in…",7,null],[12,"no_dm_prefix","","A boolean indicating whether the prefix is not necessary…",7,null],[12,"on_mention","","A user id of the bot that is used to compare mentions in…",7,null],[12,"groups","","An `IdMap` containing all `Group`s.",7,null],[12,"top_level_groups","","A list of prefixless `Group`s.",7,null],[12,"commands","","An `IdMap` containing all `Command`s.",7,null],[11,"new","","Creates a new instance of the framework configuration.",7,[[]]],[11,"prefix","","Assigns a prefix to this configuration.",7,[[]]],[11,"dynamic_prefix","","Assigns a function to dynamically parse the prefix.",7,[[["dynamicprefix",6]]]],[11,"case_insensitive","","Assigns a boolean indicating whether the casing of letters…",7,[[]]],[11,"no_dm_prefix","","Assigns a boolean indicating whether the prefix is not…",7,[[]]],[11,"on_mention","","Assigns a user id of the bot that will allow for mentions…",7,[[]]],[11,"group","","Assigns a group to this configuration.",7,[[["groupconstructor",6]]]],[11,"command","","Assigns a command to this configuration.",7,[[["commandconstructor",6]]]],[0,"context","serenity_framework","Data provided in different contexts.",null,null],[3,"Context","serenity_framework::context","The final context type.",null,null],[12,"data","","User data.",8,null],[12,"conf","","Framework configuration.",8,null],[12,"serenity_ctx","","Serenity\'s context type.",8,null],[12,"group_id","","The identifier of the group the command belongs to.",8,null],[12,"command_id","","The identifier of the command.",8,null],[12,"prefix","","The prefix that was used to invoke this command.",8,null],[12,"args","","The arguments of the command.",8,null],[3,"PrefixContext","","The prefix context.",null,null],[12,"data","","User data.",9,null],[12,"conf","","Framework configuration.",9,null],[12,"serenity_ctx","","Serenity\'s context type.",9,null],[3,"CheckContext","","The check context.",null,null],[12,"data","","User data.",10,null],[12,"conf","","Framework configuration.",10,null],[12,"serenity_ctx","","Serenity\'s context type.",10,null],[12,"group_id","","The identifier of the group that is being checked upon.",10,null],[12,"command_id","","The identifier of the command that is being checked upon.",10,null],[0,"error","serenity_framework","Defines error types used by the framework.",null,null],[4,"DispatchError","serenity_framework::error","An error describing why `dispatch`ing failed.",null,null],[13,"NormalMessage","","The message does not contain a command invocation.",11,null],[13,"PrefixOnly","","The message only contains a prefix. Contains the prefix.",11,null],[13,"MissingContent","","The message is missing information needed to complete its…",11,null],[13,"InvalidCommandName","","An invalid name for a command was passed.",11,null],[13,"InvalidCommand","","An invalid command was passed. Contains the ID to the…",11,null],[13,"CheckFailed","","A check failed. Contains its name and the reasoning why it…",11,null],[4,"Error","","Returned when the call of `dispatch` fails.",null,null],[13,"Dispatch","","Failed to dispatch a command.",12,null],[13,"User","","A command returned an error.",12,null],[0,"group","serenity_framework","Functions and types relating to groups.",null,null],[6,"GroupMap","serenity_framework::group","`IdMap` for storing groups.",null,null],[6,"GroupConstructor","","A constructor of the [`Group`] type provided by the…",null,null],[3,"GroupId","","A unique identifier of a [`Group`] stored in the…",null,null],[11,"into_usize","","Converts the identifier to its internal representation.",13,[[]]],[3,"Group","","Data surrounding a group.",null,null],[12,"id","","The identifier of this group.",14,null],[12,"name","","The name of this group.",14,null],[12,"prefixes","","The prefixes of this group by which it can be invoked.",14,null],[12,"commands","","The commands belonging to this group.",14,null],[12,"subgroups","","A list of subgroups of this group.",14,null],[12,"default_command","","A default command of this group.",14,null],[12,"description","","A string describing this group.",14,null],[12,"check","","A function that allows/denies access to this group\'s…",14,null],[11,"builder","","Constructs a builder that will be used to create a group…",14,[[],["groupbuilder",3]]],[3,"GroupBuilder","","A builder type for creating a [`Group`] from scratch.",null,null],[11,"new","","Constructs a new instance of the builder.",15,[[]]],[11,"name","","Assing the name of this group.",15,[[]]],[11,"prefix","","Assign a prefix to this group.",15,[[]]],[11,"command","","Assign a command to this group.",15,[[["commandconstructor",6]]]],[11,"subgroup","","Assign a subgroup to this group.",15,[[["groupconstructor",6]]]],[11,"default_command","","Assign a default command to this group.",15,[[["commandconstructor",6]]]],[11,"description","","Assign a description to this group.",15,[[]]],[11,"check","","Assign a check to this group.",15,[[["checkconstructor",6]]]],[11,"build","","Complete building a group.",15,[[],["group",3]]],[0,"parse","serenity_framework","Group of functions that take part in the parsing stage.",null,null],[0,"content","serenity_framework::parse","Functions to parse the content out of the message.",null,null],[5,"group","serenity_framework::parse::content","Parses a `Group` out of the content.",null,[[["configuration",3],["segments",3]]]],[5,"command","","Parses a `Command` out of the content.",null,[[["configuration",3],["segments",3],["option",4],["group",3]]]],[0,"prefix","serenity_framework::parse","Functions to parse the prefix out of a message.",null,null],[5,"mention","serenity_framework::parse::prefix","Parses a mention from the message. A mention is defined as…",null,[[],["option",4]]],[5,"dynamic_prefix","","Parses a prefix from the message dynamically using the…",null,[[["message",3],["prefixcontext",3]]]],[5,"static_prefix","","Parses a prefix from the message statically from a list of…",null,[[],["option",4]]],[5,"content","","Returns the content of the message after parsing a prefix.…",null,[[["message",3],["serenitycontext",3],["configuration",3],["arc",3]]]],[0,"prelude","serenity_framework","A series of re-exports to simplify usage of the framework.",null,null],[0,"utils","","A set of abstraction utilities used by the framework to…",null,null],[0,"id_map","serenity_framework::utils","An Identifier Map. An abstraction for structures who may…",null,null],[3,"IdMap","serenity_framework::utils::id_map","An Identifier Map. An abstraction for structures who may…",null,null],[11,"new","","Creates a new `IdMap` instance.",16,[[]]],[11,"len_names","","Returns the total number of names stored.",16,[[]]],[11,"len","","Returns the total number of structures stored.",16,[[]]],[11,"is_empty","","Returns the a boolean indicating that the map is empty.",16,[[]]],[11,"iter_names","","Returns an iterator over all names stored in the map.",16,[[],["keys",3]]],[11,"iter_ids","","Returns an iterator over all identifiers stored in the map.",16,[[],["values",3]]],[11,"iter","","Returns an iterator over all structures and their assigned…",16,[[],["iter",3]]],[11,"iter_mut","","Returns a mutable iterator over all structures and their…",16,[[],["itermut",3]]],[11,"insert_name","","Assigns a name to an identifier.",16,[[],["option",4]]],[11,"get_id","","Retrieves an identifier based on a name.",16,[[],["option",4]]],[11,"get_by_name","","Retrieves a structure based on an identifier.",16,[[],["option",4]]],[11,"get_by_name_mut","","Retrieves a structure based on an identifier.",16,[[],["option",4]]],[11,"get_pair","","Retrieves both an identifier and its structure based on a…",16,[[],["option",4]]],[11,"contains","","Returns a boolean indicating that a structure exists under…",16,[[]]],[11,"insert","","Assigns a structure to an identifier.",16,[[],["option",4]]],[11,"get","","Retrieves a structure based on an identifier.",16,[[],["option",4]]],[11,"get_mut","","Retrieves a structure based on an identifier.",16,[[],["option",4]]],[0,"segments","serenity_framework::utils","Functions and types for handling segments.",null,null],[5,"segment_index","serenity_framework::utils::segments","Returns the index to the end of a segment in the source.",null,[[]]],[5,"segment","","Returns a segment of the source.",null,[[],["option",4]]],[5,"segment_split","","Returns a segment and the rest of the source after the…",null,[[],["option",4]]],[3,"Segments","","An iterator type that splits a string into segments using…",null,null],[11,"new","","Creates a `Segments` instance.",17,[[]]],[11,"source","","Returns the source string from which segments are…",17,[[]]],[11,"delimiter","","Returns the delimiter character that is used to determine…",17,[[]]],[11,"case_insensitive","","Returns the boolean that determines whether to ignore…",17,[[]]],[11,"is_empty","","Returns a boolean indicating that the source string is…",17,[[]]],[11,"current","","Returns the current segment.",17,[[],[["cow",4],["option",4]]]],[6,"DefaultData","serenity_framework","The default type for user data when it is unspecified.",null,null],[6,"DefaultError","","The default type for command errors when it is unspecified.",null,null],[3,"Framework","","The core of the framework.",null,null],[12,"conf","","Configuration of the framework that dictates its behaviour.",18,null],[12,"data","","User data that is accessable in every command and function…",18,null],[11,"new","","Creates a new instanstiation of the framework using a…",18,[[["configuration",3]]]],[11,"with_data","","Creates new instanstiation of the framework using a given…",18,[[["configuration",3]]]],[11,"with_arc_data","","Creates new instanstiation of the framework using a given…",18,[[["configuration",3],["arc",3],["rwlock",3]]]],[11,"dispatch","","Dispatches a command.",18,[[["message",3],["serenitycontext",3]]]],[11,"dispatch_with_hook","","Dispatches a command with a hook.",18,[[["message",3],["serenitycontext",3]]]],[11,"from","serenity_framework::check","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"from","serenity_framework::command","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"equivalent","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"from","serenity_framework::configuration","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"from","serenity_framework::context","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"from","serenity_framework::error","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"to_string","","",11,[[],["string",3]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"vzip","","",11,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"to_string","","",12,[[],["string",3]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"from","serenity_framework::group","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"vzip","","",13,[[]]],[11,"equivalent","","",13,[[]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"vzip","","",14,[[]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"vzip","","",15,[[]]],[11,"from","serenity_framework::utils::id_map","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"vzip","","",16,[[]]],[11,"from","serenity_framework::utils::segments","",17,[[]]],[11,"into","","",17,[[]]],[11,"into_iter","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"vzip","","",17,[[]]],[11,"from","serenity_framework","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"vzip","","",18,[[]]],[11,"as_ref","serenity_framework::context","",8,[[],["http",3]]],[11,"as_ref","","",8,[[],["cache",3]]],[11,"as_ref","","",9,[[],["http",3]]],[11,"as_ref","","",9,[[],["cache",3]]],[11,"as_ref","","",10,[[],["http",3]]],[11,"as_ref","","",10,[[],["cache",3]]],[11,"from","serenity_framework::command","",4,[[["commandconstructor",6]]]],[11,"from","serenity_framework::error","",12,[[["dispatcherror",4]]]],[11,"from","serenity_framework::group","",13,[[["groupconstructor",6]]]],[11,"into_iter","serenity_framework::utils::id_map","",16,[[]]],[11,"next","serenity_framework::utils::segments","",17,[[],["option",4]]],[11,"clone","serenity_framework::check","",0,[[],["reason",4]]],[11,"clone","","",2,[[]]],[11,"clone","","",3,[[]]],[11,"clone","serenity_framework::command","",4,[[],["commandid",3]]],[11,"clone","","",5,[[]]],[11,"clone","","",6,[[]]],[11,"clone","serenity_framework::configuration","",7,[[]]],[11,"clone","serenity_framework::context","",8,[[]]],[11,"clone","","",9,[[]]],[11,"clone","","",10,[[]]],[11,"clone","serenity_framework::error","",11,[[],["dispatcherror",4]]],[11,"clone","","",12,[[],["error",4]]],[11,"clone","serenity_framework::group","",13,[[],["groupid",3]]],[11,"clone","","",14,[[]]],[11,"clone","","",15,[[]]],[11,"clone","serenity_framework::utils::id_map","",16,[[],["idmap",3]]],[11,"clone","serenity_framework::utils::segments","",17,[[],["segments",3]]],[11,"clone","serenity_framework","",18,[[],["framework",3]]],[11,"default","serenity_framework::check","",2,[[]]],[11,"default","","",3,[[]]],[11,"default","serenity_framework::command","",5,[[]]],[11,"default","","",6,[[]]],[11,"default","serenity_framework::configuration","",7,[[]]],[11,"default","serenity_framework::group","",14,[[]]],[11,"default","","",15,[[]]],[11,"default","serenity_framework::utils::id_map","",16,[[]]],[11,"cmp","serenity_framework::command","",4,[[["commandid",3]],["ordering",4]]],[11,"cmp","serenity_framework::group","",13,[[["groupid",3]],["ordering",4]]],[11,"eq","serenity_framework::command","",4,[[["commandid",3]]]],[11,"ne","","",4,[[["commandid",3]]]],[11,"eq","serenity_framework::group","",13,[[["groupid",3]]]],[11,"ne","","",13,[[["groupid",3]]]],[11,"partial_cmp","serenity_framework::command","",4,[[["commandid",3]],[["option",4],["ordering",4]]]],[11,"lt","","",4,[[["commandid",3]]]],[11,"le","","",4,[[["commandid",3]]]],[11,"gt","","",4,[[["commandid",3]]]],[11,"ge","","",4,[[["commandid",3]]]],[11,"partial_cmp","serenity_framework::group","",13,[[["groupid",3]],[["option",4],["ordering",4]]]],[11,"lt","","",13,[[["groupid",3]]]],[11,"le","","",13,[[["groupid",3]]]],[11,"gt","","",13,[[["groupid",3]]]],[11,"ge","","",13,[[["groupid",3]]]],[11,"fmt","serenity_framework::check","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","serenity_framework::command","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","serenity_framework::configuration","",7,[[["formatter",3]],["result",6]]],[11,"fmt","serenity_framework::error","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","serenity_framework::group","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","serenity_framework::utils::id_map","",16,[[["formatter",3]],["result",6]]],[11,"fmt","serenity_framework::utils::segments","",17,[[["formatter",3]],["result",6]]],[11,"fmt","serenity_framework::error","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"index","serenity_framework::utils::id_map","",16,[[]]],[11,"index_mut","","",16,[[]]],[11,"hash","serenity_framework::command","",4,[[]]],[11,"hash","serenity_framework::group","",13,[[]]],[11,"source","serenity_framework::error","",12,[[],[["stderror",8],["option",4]]]],[11,"http","serenity_framework::context","",8,[[],["http",3]]],[11,"cache","","",8,[[],[["option",4],["arc",3]]]],[11,"http","","",9,[[],["http",3]]],[11,"cache","","",9,[[],[["option",4],["arc",3]]]],[11,"http","","",10,[[],["http",3]]],[11,"cache","","",10,[[],[["option",4],["arc",3]]]]],"p":[[4,"Reason"],[13,"UserAndLog"],[3,"Check"],[3,"CheckBuilder"],[3,"CommandId"],[3,"Command"],[3,"CommandBuilder"],[3,"Configuration"],[3,"Context"],[3,"PrefixContext"],[3,"CheckContext"],[4,"DispatchError"],[4,"Error"],[3,"GroupId"],[3,"Group"],[3,"GroupBuilder"],[3,"IdMap"],[3,"Segments"],[3,"Framework"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);